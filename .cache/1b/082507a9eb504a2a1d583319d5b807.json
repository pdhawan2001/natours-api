{"id":"../../utils/catchAsync.js","dependencies":[{"name":"/home/parth/Work/NODE JS/Jonas/Natours/package.json","includedInParent":true,"mtime":1638210431828}],"generated":{"js":"module.exports = function (fn) {\n  return function (req, res, next) {\n    // this function is returned so that it can take the value of res, req, next, this will be called as soon as a new tour is created using create tour method, that's why it has the exact same signature as the below async function\n    fn(req, res, next).catch(next); // next will recieve err => next(err), so it is the same as writing next, eventually it will land up in our global error handling middleware\n  };\n};"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"../../utils/catchAsync.js","original":{"line":2,"column":0}},{"generated":{"line":1,"column":6},"source":"../../utils/catchAsync.js","original":{"line":2,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"../../utils/catchAsync.js","original":{"line":2,"column":7}},{"generated":{"line":1,"column":14},"source":"../../utils/catchAsync.js","original":{"line":2,"column":0}},{"generated":{"line":1,"column":17},"source":"../../utils/catchAsync.js","original":{"line":2,"column":17}},{"name":"fn","generated":{"line":1,"column":27},"source":"../../utils/catchAsync.js","original":{"line":2,"column":17}},{"generated":{"line":1,"column":29},"source":"../../utils/catchAsync.js","original":{"line":2,"column":19}},{"generated":{"line":2,"column":0},"source":"../../utils/catchAsync.js","original":{"line":2,"column":19}},{"generated":{"line":2,"column":9},"source":"../../utils/catchAsync.js","original":{"line":2,"column":23}},{"name":"req","generated":{"line":2,"column":19},"source":"../../utils/catchAsync.js","original":{"line":2,"column":24}},{"generated":{"line":2,"column":22},"source":"../../utils/catchAsync.js","original":{"line":2,"column":23}},{"name":"res","generated":{"line":2,"column":24},"source":"../../utils/catchAsync.js","original":{"line":2,"column":29}},{"generated":{"line":2,"column":27},"source":"../../utils/catchAsync.js","original":{"line":2,"column":23}},{"name":"next","generated":{"line":2,"column":29},"source":"../../utils/catchAsync.js","original":{"line":2,"column":34}},{"generated":{"line":2,"column":33},"source":"../../utils/catchAsync.js","original":{"line":2,"column":23}},{"generated":{"line":2,"column":35},"source":"../../utils/catchAsync.js","original":{"line":2,"column":43}},{"generated":{"line":3,"column":0},"source":"../../utils/catchAsync.js","original":{"line":2,"column":45}},{"name":"fn","generated":{"line":4,"column":0},"source":"../../utils/catchAsync.js","original":{"line":3,"column":4}},{"name":"fn","generated":{"line":4,"column":4},"source":"../../utils/catchAsync.js","original":{"line":3,"column":4}},{"generated":{"line":4,"column":6},"source":"../../utils/catchAsync.js","original":{"line":3,"column":6}},{"name":"req","generated":{"line":4,"column":7},"source":"../../utils/catchAsync.js","original":{"line":3,"column":7}},{"generated":{"line":4,"column":10},"source":"../../utils/catchAsync.js","original":{"line":3,"column":6}},{"name":"res","generated":{"line":4,"column":12},"source":"../../utils/catchAsync.js","original":{"line":3,"column":12}},{"generated":{"line":4,"column":15},"source":"../../utils/catchAsync.js","original":{"line":3,"column":6}},{"name":"next","generated":{"line":4,"column":17},"source":"../../utils/catchAsync.js","original":{"line":3,"column":17}},{"generated":{"line":4,"column":21},"source":"../../utils/catchAsync.js","original":{"line":3,"column":6}},{"generated":{"line":4,"column":22},"source":"../../utils/catchAsync.js","original":{"line":3,"column":4}},{"name":"catch","generated":{"line":4,"column":23},"source":"../../utils/catchAsync.js","original":{"line":3,"column":23}},{"generated":{"line":4,"column":28},"source":"../../utils/catchAsync.js","original":{"line":3,"column":4}},{"name":"next","generated":{"line":4,"column":29},"source":"../../utils/catchAsync.js","original":{"line":3,"column":29}},{"generated":{"line":4,"column":33},"source":"../../utils/catchAsync.js","original":{"line":3,"column":4}},{"generated":{"line":4,"column":35},"source":"../../utils/catchAsync.js","original":{"line":2,"column":43}},{"generated":{"line":4,"column":36},"source":"../../utils/catchAsync.js","original":{"line":3,"column":36}},{"generated":{"line":5,"column":0},"source":"../../utils/catchAsync.js","original":{"line":4,"column":3}},{"generated":{"line":5,"column":3},"source":"../../utils/catchAsync.js","original":{"line":2,"column":19}},{"generated":{"line":6,"column":0},"source":"../../utils/catchAsync.js","original":{"line":2,"column":19}},{"generated":{"line":6,"column":1},"source":"../../utils/catchAsync.js","original":{"line":2,"column":0}}],"sources":{"../../utils/catchAsync.js":"\nmodule.exports = fn => (req, res, next) => { // this function is returned so that it can take the value of res, req, next, this will be called as soon as a new tour is created using create tour method, that's why it has the exact same signature as the below async function\n    fn(req, res, next).catch(next); // next will recieve err => next(err), so it is the same as writing next, eventually it will land up in our global error handling middleware\n  };\n"},"lineCount":null}},"error":null,"hash":"228591eb8e9e65369fa696e76be19613","cacheData":{"env":{}}}